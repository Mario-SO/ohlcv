name: Performance Benchmarks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at 2:00 UTC to track performance trends
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering

jobs:
  benchmark:
    name: Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Need full history for performance comparison
          fetch-depth: 0
      
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.14.1
      
      - name: Cache benchmark data
        uses: actions/cache@v4
        with:
          path: |
            profiling_results/
            .zig-cache/
          key: ${{ runner.os }}-benchmark-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-benchmark-
      
      - name: Create profiling directory
        run: mkdir -p profiling_results
      
      - name: Build benchmarks
        run: |
          zig build benchmark --summary none
          zig build profile-memory --summary none
      
      - name: Run performance benchmarks
        run: |
          echo "üöÄ Running OHLCV Performance Benchmarks"
          echo "========================================"
          echo "Commit: ${{ github.sha }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"
          echo ""
          
          # Run benchmarks and save results
          ./scripts/profile.sh benchmark
          
          # Show results in GitHub Actions log
          echo "üìä Performance Results:"
          echo "======================"
          cat profiling_results/benchmark_*.txt | tail -20
      
      - name: Run memory profiling
        run: |
          echo ""
          echo "üß† Running Memory Profiling"
          echo "==========================="
          
          ./scripts/profile.sh memory
          
          # Show memory results in GitHub Actions log
          echo "üìà Memory Profile:"
          echo "================="
          cat profiling_results/memory_profile_*.txt | tail -20
      
      - name: Download previous benchmark (for comparison)
        uses: actions/download-artifact@v4
        with:
          name: benchmark-results
          path: profiling_results/previous/
        continue-on-error: true
      
      - name: Compare with previous run
        if: success()
        run: |
          echo ""
          echo "üìà Performance Comparison"
          echo "========================"
          
          # If we have previous results, compare them
          if [ -f "profiling_results/previous/benchmark_latest.txt" ]; then
            echo "Found previous benchmark results, generating comparison..."
            
            # Copy previous result to expected location for comparison
            cp profiling_results/previous/benchmark_latest.txt profiling_results/
            
            # Generate comparison report
            ./scripts/profile.sh compare
            
            # Show comparison in GitHub Actions log
            echo "üîç Performance Delta Analysis:"
            echo "=============================="
            tail -30 profiling_results/comparison_*.txt
          else
            echo "No previous benchmark results found - this is the baseline run"
          fi
      
      - name: Prepare benchmark artifacts
        run: |
          # Copy latest benchmark as the new baseline
          LATEST_BENCHMARK=$(ls -t profiling_results/benchmark_*.txt | head -1)
          LATEST_MEMORY=$(ls -t profiling_results/memory_profile_*.txt | head -1)
          cp "$LATEST_BENCHMARK" profiling_results/benchmark_latest.txt
          cp "$LATEST_MEMORY" profiling_results/memory_profile_latest.txt
          
          # Create summary report
          echo "# OHLCV Performance Report" > profiling_results/PERFORMANCE_SUMMARY.md
          echo "" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "**Generated:** $(date)" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "**Commit:** ${{ github.sha }}" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "**Branch:** ${{ github.ref_name }}" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "## Benchmark Results" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "\`\`\`" >> profiling_results/PERFORMANCE_SUMMARY.md
          tail -20 profiling_results/benchmark_latest.txt >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "\`\`\`" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "## Memory Profile" >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "\`\`\`" >> profiling_results/PERFORMANCE_SUMMARY.md
          tail -15 profiling_results/memory_profile_latest.txt >> profiling_results/PERFORMANCE_SUMMARY.md
          echo "\`\`\`" >> profiling_results/PERFORMANCE_SUMMARY.md
          
          # Add comparison if available
          if [ -f profiling_results/comparison_*.txt ]; then
            echo "" >> profiling_results/PERFORMANCE_SUMMARY.md
            echo "## Performance Comparison" >> profiling_results/PERFORMANCE_SUMMARY.md
            echo "\`\`\`" >> profiling_results/PERFORMANCE_SUMMARY.md
            tail -25 profiling_results/comparison_*.txt >> profiling_results/PERFORMANCE_SUMMARY.md
            echo "\`\`\`" >> profiling_results/PERFORMANCE_SUMMARY.md
          fi
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: |
            profiling_results/benchmark_latest.txt
            profiling_results/memory_profile_latest.txt
            profiling_results/PERFORMANCE_SUMMARY.md
          retention-days: 30
      
      - name: Upload detailed profiling data
        uses: actions/upload-artifact@v4
        with:
          name: detailed-profiling-${{ github.sha }}
          path: profiling_results/
          retention-days: 7
      
      - name: Performance regression check
        if: github.event_name == 'pull_request'
        run: |
          echo "üîç Checking for performance regressions..."
          
          if [ -f profiling_results/comparison_*.txt ]; then
            # Check if any indicator got significantly slower (>20%)
            if grep -q "üî¥ SLOWER" profiling_results/comparison_*.txt; then
              echo "‚ö†Ô∏è Performance regressions detected:"
              grep "üî¥ SLOWER" profiling_results/comparison_*.txt || true
              
              # Check for major regressions (>50%)
              if grep -E "\+[5-9][0-9]\.[0-9]%\)|üî¥ SLOWER" profiling_results/comparison_*.txt | grep -E "\+[5-9][0-9]"; then
                echo ""
                echo "‚ùå MAJOR PERFORMANCE REGRESSION DETECTED (>50% slower)"
                echo "This PR significantly impacts performance. Please review the changes."
                exit 1
              else
                echo ""
                echo "‚ö†Ô∏è Minor performance regressions detected. Please review."
                echo "Consider investigating if these changes are expected."
              fi
            else
              echo "‚úÖ No significant performance regressions detected"
            fi
          else
            echo "‚ÑπÔ∏è No previous benchmark data available for comparison"
          fi
      
      - name: Comment PR with performance results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Read the performance summary
            const summaryPath = 'profiling_results/PERFORMANCE_SUMMARY.md';
            let summary = '# üìä Performance Benchmark Results\n\n';
            
            if (fs.existsSync(summaryPath)) {
              summary += fs.readFileSync(summaryPath, 'utf8');
            } else {
              summary += 'Benchmark results not available.';
            }
            
            summary += '\n\n---\n*Automated performance testing by GitHub Actions*';
            
            // Post comment on PR
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });